/**
 * _mixins.scss
 */

/*
Animation
 */
@mixin animate($transition: all, $time: .25s) {
  transition: $transition $time ease;
}
@mixin no-animate() {
  transition: none;
}

/*
Antialiasing
 */
@mixin font-smoothing($value: on) {
  @if ($value == on) {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

/*
Background cover
 */
@mixin bg-cover($position: 50% 50%) {
  background-position: $position;
  background-repeat: no-repeat;
  background-size: cover;
}

/*
Buttons
 */
@mixin button {
  @extend .btn, .btn-primary;
}
@mixin button-accent($color: white, $bg-color: $heading-color) {
  @include button;
  color: $color !important;
  background-color: $bg-color !important;
}

/* Brand */
@mixin button-brand {
  display: block;
  font-size: 0.75rem;
  text-transform: uppercase;

  span, i {
    display: inline-block;
    vertical-align: middle;
    line-height: 1.0;
  }
  span {
    font-weight: 700;
  }
  i {
    font-weight: 400;
    font-size: 2em;
    color: $link-color;
    // margin-top: -1px;
  }
}
@mixin button-point-in {
  @include button-brand;
}

/*
Clearfix
 */
@mixin clearfix() {
  &:after,
  &:before {
    content: "";
    display: table;
    table-layout: fixed;
  }
  &:after {
    clear: both;
  }
}

/*
Link Color
 */
@mixin link-color($color: $link-color) {
  color: $color;

  &:hover,
  &:focus,
  &:active {
    color: darken($color, 10%);
  }
}

/*
Media queries
 */
@mixin break-xs {
  @media (min-width: $break-xs) {
    @content
  }
}
@mixin break-sm {
  @media (min-width: $break-sm) {
    @content
  }
}
@mixin break-md {
  @media (min-width: $break-md) {
    @content
  }
}
@mixin break-lg {
  @media (min-width: $break-lg) {
    @content
  }
}

/*
Screen readers
 */
@mixin sr-only {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

/*
Vertical centering
 */
@mixin vert-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}
